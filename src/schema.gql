# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  password: String
  email: String!
}

type JWT {
  jwt: String!
}

type DeletedItem {
  acknowledged: Boolean
  deletedCount: Int
}

type Genre {
  id: ID!
  name: String
  description: String
  country: String
  year: Int
}

type Band {
  id: ID!
  name: String!
  origin: String
  members: [String]
  website: String
  genres: [Genre]
}

type Artist {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [Band]
  instruments: [String]
}

type Track {
  id: ID!
  title: String!
  album: Album
  artists: [Artist]
  bands: [Band]
  duration: Int
  released: Int
  genres: [Genre]
}

type Album {
  id: ID!
  name: String
  released: Int
  artists: [Artist]
  bands: [Band]
  tracks: [Track]
  genres: [Genre]
  image: String
}

type Favourites {
  id: ID!
  userId: ID
  bands: [Band]
  genres: [Genre]
  artists: [Artist]
  tracks: [Track]
}

type Query {
  user(id: ID!): User
  jwt(email: String!, password: String!): JWT!
  genre(id: ID!): Genre
  genres: [Genre]!
  artist(id: ID!): Artist
  artists: [Artist]!
  band(id: ID!): Band
  bands: [Band]!
  track(id: ID!): Track
  tracks: [Track!]!
  album(id: ID!): Album
  albums: [Album]!
  favourites: Favourites
}

type Mutation {
  register(email: String!, password: String!, firstName: String!, lastName: String!): User!
  createGenre(name: String!, description: String, country: String, year: Int): Genre!
  deleteGenre(id: ID!): DeletedItem
  updateGenre(id: ID!, name: String, description: String, country: String, year: Int): Genre!
  createArtist(firstName: String!, secondName: String!, middleName: String, birthDate: String, birthPlace: String, country: String!, bands: [String], instruments: [String]): Artist!
  deleteArtist(id: ID!): DeletedItem
  updateArtist(id: ID!, firstName: String, secondName: String, middleName: String, birthDate: String, birthPlace: String, country: String, bands: [String], instruments: [String]): Artist!
  createBand(name: String!, origin: String, members: [String], website: String, genresIds: [ID]): Band!
  deleteBand(id: ID!): DeletedItem
  updateBand(id: ID!, name: String, origin: String, members: [String], website: String, genresIds: [ID]): Band!
  createTrack(title: String!, albumId: String, bandsIds: [String], artistsIds: [String], duration: Int, released: Int, genresIds: [String]): Track!
  deleteTrack(id: ID!): DeletedItem
  updateTrack(id: ID!, title: String, albumId: String, bandsIds: [String!], artistsIds: [String!], duration: Int, released: Int, genresIds: [String!]): Track!
  createAlbum(name: String!, released: Int, artistsIds: [String], bandsIds: [String], trackIds: [String], genresIds: [String]): Album!
  deleteAlbum(id: ID!): DeletedItem
  updateAlbum(id: ID!, name: String, released: Int, artistsIds: [String], bandsIds: [String], trackIds: [String], genresIds: [String]): Album!
  addTrackToFavourites(id: String!): Favourites!
  addBandToFavourites(id: String!): Favourites!
  addArtistToFavourites(id: String!): Favourites!
  addGenreToFavourites(id: String!): Favourites!
  removeTrackFromFavourites(id: String!): Favourites!
  removeBandFromFavourites(id: String!): Favourites!
  removeArtistFromFavourites(id: String!): Favourites!
  removeGenreFromFavourites(id: String!): Favourites!
}